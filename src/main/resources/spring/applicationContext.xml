<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd  
                        http://www.springframework.org/schema/context  
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd  
                        http://www.springframework.org/schema/mvc  
                        http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
                        http://www.springframework.org/schema/aop
          				http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
          				http://www.springframework.org/schema/tx
          				http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">

	<context:annotation-config />
	
	<!-- 启动组件扫描：排除@Controller组件，该组件使用SpringMVC配置文件扫描 -->
	<context:component-scan base-package="com.istudycloud">
		<context:exclude-filter type="annotation" 
			expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	
	<!-- 引入数据库配置文件 -->
	<context:property-placeholder location="classpath:config/db.properties"/>
	
	<!-- 配置连接池对象 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
		<property name="driverClassName" value="${db.driverClassName}" />
		<property name="url" value="${db.url}" />
		<property name="username" value="${db.username}" />
		<property name="password" value="${db.password}" />
		<property name="maxActive" value="${db.maxActive}" />
	</bean>
	
	<!-- Spring和Mybatis的整合 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 注入数据源 -->
		<property name="dataSource" ref="dataSource" />
		<!-- mybatis全局配置文件 -->
		<property name="configLocation" value="classpath:config/mybatis.xml"></property>
		<!-- 自动扫描mapper映射文件 -->
		<property name="mapperLocations" value="classpath:sqls/*.xml"></property>
	</bean>
	
	<!-- DAO接口所在包名，Spring会自动查找其下的类,并动态生成其代理子类对象 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.istudycloud.*" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>

	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSessionFactory" />
	</bean>
	
	<!-- what:配置事务管理器 -->
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>
	
	<!-- when:在什么实际做增强~配置事务管理器-->
	<tx:advice id="crudAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="get*" read-only="true"/>
			<tx:method name="list*" read-only="true"/>
			<tx:method name="query*" read-only="true"/>
			<tx:method name="*"/>
		</tx:attributes>
	</tx:advice>
	
	<!-- 配置增强 -->
	<aop:config>
		<aop:pointcut expression="execution(* com.istudycloud..*Service.*(..))" id="txPoint"/>
		<aop:advisor advice-ref="crudAdvice" pointcut-ref="txPoint"/>
	</aop:config>
	
	
	
	
	
	
	
	
</beans>